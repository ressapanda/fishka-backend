on: [push]

name: check and deploy

jobs:
  code_checks:
    name: Python code checks
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.8','3.9']
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install pip --upgrade
          pip install poetry
          poetry install --no-dev
          poetry add flake8
          poetry add safety
          poetry add PyLint
          poetry add pylint_django
          poetry add pylint_requests
          poetry show -v

      - name: Lint with flake8
        run: |
          POETRY_VENV=$(ls -td /home/runner/.cache/pypoetry/virtualenvs/*/ | head -1)
          source $POETRY_VENV/bin/activate
          flake8 .

      - name: PyLint
        run: |
          POETRY_VENV=$(ls -td /home/runner/.cache/pypoetry/virtualenvs/*/ | head -1)
          source $POETRY_VENV/bin/activate
          pylint apps/ fishka_backend/ --rcfile ./.pylintrc 

      - name: PipCheck
        run: |
          POETRY_VENV=$(ls -td /home/runner/.cache/pypoetry/virtualenvs/*/ | head -1)
          source $POETRY_VENV/bin/activate
          pip check

  build_container:
    name: Build and publish container
    needs: code_checks
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: adrixop95/fishka-backend:latest,adrixop95/fishka-backend:${{ github.sha }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  scan_container:
    name: Scan latest container
    needs: build_container
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: azure/container-scan@v0
        with:
          image-name: registry.hub.docker.com/adrixop95/fishka-backend:${{ github.sha }}