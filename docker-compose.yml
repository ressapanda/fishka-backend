version: '3.8'

services:

  fishka-traefik:
    container_name: "fishka-traefik"
    image: "traefik:v2.4"
    restart: unless-stopped
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web-secure.address=:443"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.forwardedheaders.insecure"
      - "--entrypoints.web.proxyprotocol.insecure"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@exaplme.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/ssl/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
    labels:
      - traefik.enable=true
      - traefik.http.routers.http-catchall.rule=HostRegexp(`{host:(www\.)?.+}`)
      - traefik.http.routers.http-catchall.entrypoints=web
      - traefik.http.routers.http-catchall.middlewares=wwwtohttps
      - traefik.http.routers.wwwsecure-catchall.rule=HostRegexp(`{host:(www\.).+}`)
      - traefik.http.routers.wwwsecure-catchall.entrypoints=web-secure
      - traefik.http.routers.wwwsecure-catchall.tls=true
      - traefik.http.routers.wwwsecure-catchall.middlewares=wwwtohttps
      - traefik.http.middlewares.wwwtohttps.redirectregex.regex=^https?://(?:www\.)?(.+)
      - traefik.http.middlewares.wwwtohttps.redirectregex.replacement=https://$${1}
      - traefik.http.middlewares.wwwtohttps.redirectregex.permanent=true
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik_le:/ssl"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - fishka-network

  fishka-backend:
    container_name: "fishka-backend"
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DB_ENGINE=django.db.backends.postgresql_psycopg2
      - DB_HOST=fishka-db
      - DB_NAME=fishka-database
      - DB_USER=fishka-user
      - DB_PASSWORD=fishka-password
      - URL=${URL}
    labels:
      - traefik.enable=true
      - traefik.http.routers.fishka-backend.rule=Host(`${URL}`) && PathPrefix (`/api`)
      - traefik.http.services.fishka-backend.loadbalancer.server.port=8000
      - traefik.http.routers.fishka-backend.entrypoints=web-secure
      - traefik.http.middlewares.fishka-backend.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE,PATCH
      - traefik.http.middlewares.fishka-backend.headers.accesscontrolalloworigin=origin-list-or-null
      - traefik.http.middlewares.fishka-backend.headers.accesscontrolmaxage=100
      - traefik.http.middlewares.fishka-backend.headers.addvaryheader=true
      - traefik.http.routers.fishka-backend.tls=true
      - traefik.http.routers.fishka-backend.tls.certresolver=letsencrypt
    depends_on:
      - fishka-db
    volumes:
      - ./:/app/
      - backend_statics:/app/static/
    networks:
      - fishka-network

  fishka-frontend:
    container_name: "fishka-frontend"
    image: "adrixop95/fishka-frontend:latest"
    restart: unless-stopped
    environment:
      - API=https://${URL}/
      - PROD=true
    labels:
      - traefik.enable=true
      - traefik.http.routers.fishka-nginx.rule=Host(`${URL}`)
      - traefik.http.services.fishka-nginx.loadbalancer.server.port=80
      - traefik.http.routers.fishka-nginx.entrypoints=web-secure
      - traefik.http.middlewares.fishka-nginx.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE,PATCH
      - traefik.http.middlewares.fishka-nginx.headers.accesscontrolalloworigin=origin-list-or-null
      - traefik.http.middlewares.fishka-nginx.headers.accesscontrolmaxage=100
      - traefik.http.middlewares.fishka-nginx.headers.addvaryheader=true
      - traefik.http.routers.fishka-nginx.tls=true
      - traefik.http.routers.fishka-nginx.tls.certresolver=letsencrypt
    volumes:
      - backend_statics:/backend_static/
    networks:
      - fishka-network

  fishka-db:
    container_name: "fishka-db"
    image: "postgres:13-alpine"
    restart: unless-stopped
    volumes:
      - fishka-db:/var/lib/postgresql
    environment:
      - POSTGRES_USER=fishka-user
      - POSTGRES_PASSWORD=fishka-password
      - POSTGRES_DB=fishka-database
    ports:
      - 5432:5432
    networks:
      - fishka-network

volumes:
  traefik_le:
  fishka-db:
  backend_statics:

networks:
  fishka-network:
    name: fishka-network
